pipeline {
    agent any

    tools {
        nodejs 'node'
    }

    environment {
        REACT_APP_BUILD_PATH = './build'
        AWS_REGION = 'us-east-1'
        FUNCTION_NAME = 'joke-generator-jenkins-lambda'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'npm test'
            }
        }

        stage('Build React Application') {
            steps {
                sh 'npm run build'
                archiveArtifacts artifacts: 'build/**', fingerprint: true  // Store files in Jenkins
            }
        }

        stage('Serve React App') {
            steps {
                script {
                    // Run the server in the background
                    sh 'npx serve -s build -l 3000 &'
                }
                echo "✅ React App is now running at: http://<JENKINS_SERVER>:3000"
            }
        }

        stage('Package for AWS Lambda') {
            steps {
                sh '''
                zip -r lambda-package.zip build package.json node_modules
                '''
                archiveArtifacts artifacts: 'lambda-package.zip', fingerprint: true
            }
        }

        stage('Deploy to AWS Lambda') {
            steps {
                withAWS(region: "${AWS_REGION}") {
                    sh '''
                    aws lambda update-function-code --function-name ${FUNCTION_NAME} --zip-file fileb://lambda-package.zip
                    '''
                }
            }
        }
    }

    post {
        always {
            deleteDir()
        }

        success {
            echo "✅ Deployment successful!"
        }

        failure {
            echo "❌ Deployment failed!"
        }
    }
}pipeline {
    agent any

    tools {
        nodejs 'node'  // Specify the Node.js version to use
    }

    environment {
        REACT_APP_BUILD_PATH = './build'  // Path where React build artifacts will be generated
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm  // Checkout the source code from the repository
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'  // Install dependencies using npm
            }
        }

        stage('Run Tests') {
            steps {
                sh 'npm test'  // Run unit tests using Jest (from your testing library)
            }
        }

        stage('Build React Application') {
            steps {
                sh 'npm run build'  // Run the build command to build the React app
            }
        }

        stage('Deploy') {
            steps {
                // You can add deployment steps here, like pushing the build to a server or deploying via AWS S3
                sh 'echo "Deploy step is not defined."'  // Placeholder step; modify as needed
            }
        }
    }

    post {
        always {
            // Optional: Cleanup work after the pipeline finishes
            deleteDir()
        }

        success {
            // Notify on success (if needed)
            // Example: Slack or email notification
        }

        failure {
            // Notify on failure (if needed)
            // Example: Slack or email notification
        }
    }
}
